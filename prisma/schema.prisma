generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String      @id @default(cuid())
  email        String   @unique
  username     String   @unique
  password     String
  name         String
  image        String?
  bio          String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  posts        Post[]
  postLikes    PostLike[]
  comments     Comment[]
  commentLikes CommentLike[]
}


model Post {
  id           String      @id @default(cuid())
  image        String
  caption      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  author       User     @relation(fields: [authorId], references: [id])
  authorId     String      
  postLikes    PostLike[]
  comments     Comment[]
}

model PostLike {
  id         String      @id @default(cuid())
  post       Post       @relation(fields: [postId], references: [id])
  postId     String        
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String        
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Comment {
  id         String      @id @default(cuid())
  text       String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  post       Post       @relation(fields: [postId], references: [id])
  postId     String        
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String        
  commentLikes CommentLike[]
}

model CommentLike {
  id         String      @id @default(cuid())
  comment    Comment    @relation(fields: [commentId], references: [id])
  commentId  String        
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String        
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}